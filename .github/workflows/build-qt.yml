# .github/workflows/build-qt.yml
name: Build Qt for macOS

on:
  workflow_dispatch:  # Only manually trigger

jobs:
  build-qt:
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install dependencies
      run: |
        brew install ninja
        # Check if cmake is already installed, if not install it
        if ! command -v cmake &> /dev/null; then
          brew install cmake
        else
          echo "cmake is already available at $(which cmake)"
          cmake --version
        fi
    
    - name: Cache Qt source
      uses: actions/cache@v4
      id: cache-qt-source
      with:
        path: qt-everywhere-src-6.8.1.tar.xz
        key: qt-source-6.8.1
    
    - name: Download Qt source
      if: steps.cache-qt-source.outputs.cache-hit != 'true'
      run: |
        curl -L -o qt-everywhere-src-6.8.1.tar.xz https://download.qt.io/official_releases/qt/6.8/6.8.1/single/qt-everywhere-src-6.8.1.tar.xz
    
    - name: Extract Qt source
      run: |
        tar -xf qt-everywhere-src-6.8.1.tar.xz
    
    - name: Cache Qt build
      uses: actions/cache@v4
      id: cache-qt-build
      with:
        path: |
          qt-build
          qt-install
        key: qt-build-macos-6.8.1-${{ runner.os }}-${{ hashFiles('qt-everywhere-src-6.8.1/configure.cmake') }}
        restore-keys: |
          qt-build-macos-6.8.1-${{ runner.os }}-
    
    - name: Configure Qt
      if: steps.cache-qt-build.outputs.cache-hit != 'true'
      run: |
        mkdir -p qt-build qt-install
        cd qt-build
        cmake ../qt-everywhere-src-6.8.1 \
          -GNinja \
          -DCMAKE_INSTALL_PREFIX=../qt-install \
          -DCMAKE_BUILD_TYPE=Release \
          -DQT_BUILD_EXAMPLES=OFF \
          -DQT_BUILD_TESTS=OFF \
          -DBUILD_SHARED_LIBS=OFF \
          -DQT_FEATURE_webengine=OFF \
          -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
    
    - name: Build Qt
      if: steps.cache-qt-build.outputs.cache-hit != 'true'
      run: |
        cd qt-build
        ninja -j$(sysctl -n hw.ncpu)
    
    - name: Install Qt
      if: steps.cache-qt-build.outputs.cache-hit != 'true'
      run: |
        cd qt-build
        ninja install
    
    - name: Create tarball
      run: |
        tar -czf qt-6.8.1-macos-universal.tar.gz -C qt-install .
    
    - name: Upload Qt build artifact
      uses: actions/upload-artifact@v4
      with:
        name: qt-6.8.1-macos-universal
        path: qt-6.8.1-macos-universal.tar.gz
        retention-days: 90
    
    - name: Create release (optional)
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: qt-6.8.1-macos-universal
        name: Qt 6.8.1 for macOS Universal
        files: qt-6.8.1-macos-universal.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
